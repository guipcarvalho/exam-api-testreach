// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestReach.Exam.Data.Contexts;

namespace TestReach.Exam.Data.Migrations
{
    [DbContext(typeof(ExamContext))]
    [Migration("20211101230004_AddScore")]
    partial class AddScore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestReach.Exam.Domain.Entities.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChosenOption")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid>("ExamAttemptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuestionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamAttemptId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("TestReach.Exam.Domain.Entities.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email", "Name");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("TestReach.Exam.Domain.Entities.Exam", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            Id = "EX202001",
                            CreationDate = new DateTime(2021, 11, 1, 20, 0, 4, 425, DateTimeKind.Local).AddTicks(4483),
                            Name = "Exam 1"
                        },
                        new
                        {
                            Id = "EX202002",
                            CreationDate = new DateTime(2021, 11, 1, 20, 0, 4, 426, DateTimeKind.Local).AddTicks(820),
                            Name = "Exam 2"
                        },
                        new
                        {
                            Id = "EX202003",
                            CreationDate = new DateTime(2021, 11, 1, 20, 0, 4, 426, DateTimeKind.Local).AddTicks(834),
                            Name = "Exam 3"
                        },
                        new
                        {
                            Id = "EX202004",
                            CreationDate = new DateTime(2021, 11, 1, 20, 0, 4, 426, DateTimeKind.Local).AddTicks(836),
                            Name = "Exam 4"
                        });
                });

            modelBuilder.Entity("TestReach.Exam.Domain.Entities.ExamAttempt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AttemptDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamAttempts");
                });

            modelBuilder.Entity("TestReach.Exam.Domain.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ExamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QuestionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d7d2140-e73a-4526-9572-43092e31a454"),
                            CorrectAnswer = "A",
                            ExamId = "EX202001",
                            QuestionNumber = 1
                        },
                        new
                        {
                            Id = new Guid("ca5070cc-db57-4e04-b026-358038ce19bd"),
                            CorrectAnswer = "C",
                            ExamId = "EX202001",
                            QuestionNumber = 2
                        },
                        new
                        {
                            Id = new Guid("af2fc86d-7336-4163-a8bd-837a9aba0aea"),
                            CorrectAnswer = "C",
                            ExamId = "EX202001",
                            QuestionNumber = 3
                        },
                        new
                        {
                            Id = new Guid("ddfafe82-8404-4d65-9bf3-7987a07df1f0"),
                            CorrectAnswer = "A",
                            ExamId = "EX202001",
                            QuestionNumber = 4
                        },
                        new
                        {
                            Id = new Guid("b9efbec3-e3f9-4a47-8888-63d118fbfae5"),
                            CorrectAnswer = "B",
                            ExamId = "EX202001",
                            QuestionNumber = 5
                        },
                        new
                        {
                            Id = new Guid("7ce63598-e9b4-422e-87f2-9653f24079bc"),
                            CorrectAnswer = "B",
                            ExamId = "EX202001",
                            QuestionNumber = 6
                        },
                        new
                        {
                            Id = new Guid("695fc389-b596-46c4-8880-e3a1eb09e28c"),
                            CorrectAnswer = "C",
                            ExamId = "EX202001",
                            QuestionNumber = 7
                        },
                        new
                        {
                            Id = new Guid("59e65f89-5e1d-46d3-b350-5eb1f8155cd3"),
                            CorrectAnswer = "A",
                            ExamId = "EX202001",
                            QuestionNumber = 8
                        },
                        new
                        {
                            Id = new Guid("97d49c91-bcb9-4b28-995e-ec4e5ba596f2"),
                            CorrectAnswer = "D",
                            ExamId = "EX202001",
                            QuestionNumber = 9
                        },
                        new
                        {
                            Id = new Guid("e8053a45-ea8f-490b-acf0-8f05e69bc6c8"),
                            CorrectAnswer = "A",
                            ExamId = "EX202001",
                            QuestionNumber = 10
                        },
                        new
                        {
                            Id = new Guid("2d2bbeee-17e3-4ed1-9f6d-9effacd82060"),
                            CorrectAnswer = "B",
                            ExamId = "EX202002",
                            QuestionNumber = 1
                        },
                        new
                        {
                            Id = new Guid("828bdb4b-277a-4752-9582-4c21eb6d0031"),
                            CorrectAnswer = "D",
                            ExamId = "EX202002",
                            QuestionNumber = 2
                        },
                        new
                        {
                            Id = new Guid("9d3186a7-9be7-42b4-914d-472615ff49d3"),
                            CorrectAnswer = "C",
                            ExamId = "EX202002",
                            QuestionNumber = 3
                        },
                        new
                        {
                            Id = new Guid("c70d48c5-48ff-43f2-a45a-4494a1bb564d"),
                            CorrectAnswer = "C",
                            ExamId = "EX202002",
                            QuestionNumber = 4
                        },
                        new
                        {
                            Id = new Guid("cf5216b1-8380-4271-a732-00021b3c9386"),
                            CorrectAnswer = "A",
                            ExamId = "EX202002",
                            QuestionNumber = 5
                        },
                        new
                        {
                            Id = new Guid("3c429edf-bd16-48ca-9c74-6b944db6b11b"),
                            CorrectAnswer = "D",
                            ExamId = "EX202002",
                            QuestionNumber = 6
                        },
                        new
                        {
                            Id = new Guid("96c63c36-1f7c-498a-ae9d-7eefdd5d0322"),
                            CorrectAnswer = "E",
                            ExamId = "EX202002",
                            QuestionNumber = 7
                        },
                        new
                        {
                            Id = new Guid("2aad25dd-3d6e-4f3a-9c1a-89c94cba2edf"),
                            CorrectAnswer = "E",
                            ExamId = "EX202002",
                            QuestionNumber = 8
                        },
                        new
                        {
                            Id = new Guid("954df692-68f4-452d-8bca-327b48f18426"),
                            CorrectAnswer = "C",
                            ExamId = "EX202002",
                            QuestionNumber = 9
                        },
                        new
                        {
                            Id = new Guid("097ce615-c96a-4fe4-ac3a-f09299a9ca8d"),
                            CorrectAnswer = "A",
                            ExamId = "EX202002",
                            QuestionNumber = 10
                        },
                        new
                        {
                            Id = new Guid("8ce8020b-8f5b-4b86-ad56-61108d0c6b15"),
                            CorrectAnswer = "E",
                            ExamId = "EX202002",
                            QuestionNumber = 11
                        },
                        new
                        {
                            Id = new Guid("4849fd09-60f0-46f1-8a93-d9bcf0d83d5e"),
                            CorrectAnswer = "C",
                            ExamId = "EX202002",
                            QuestionNumber = 12
                        },
                        new
                        {
                            Id = new Guid("28ec532e-0eff-434e-a5bd-8f131d1e7397"),
                            CorrectAnswer = "D",
                            ExamId = "EX202002",
                            QuestionNumber = 13
                        },
                        new
                        {
                            Id = new Guid("ad41922e-1b80-4aae-b694-4cae612c68a3"),
                            CorrectAnswer = "E",
                            ExamId = "EX202002",
                            QuestionNumber = 14
                        },
                        new
                        {
                            Id = new Guid("15b48bb9-8877-4347-b66d-aa0b56281fbe"),
                            CorrectAnswer = "A",
                            ExamId = "EX202002",
                            QuestionNumber = 15
                        },
                        new
                        {
                            Id = new Guid("6740e6d8-ef11-45ad-b23c-2da42ab134b8"),
                            CorrectAnswer = "B",
                            ExamId = "EX202002",
                            QuestionNumber = 16
                        },
                        new
                        {
                            Id = new Guid("e7560501-875d-49da-9c23-95e137e832e9"),
                            CorrectAnswer = "D",
                            ExamId = "EX202002",
                            QuestionNumber = 17
                        },
                        new
                        {
                            Id = new Guid("2d53b739-9466-488c-b662-41a73d68086e"),
                            CorrectAnswer = "B",
                            ExamId = "EX202003",
                            QuestionNumber = 1
                        },
                        new
                        {
                            Id = new Guid("f8a5062d-ea9b-4353-9afa-3faef7ff775b"),
                            CorrectAnswer = "C",
                            ExamId = "EX202003",
                            QuestionNumber = 2
                        },
                        new
                        {
                            Id = new Guid("ffe79382-6476-48df-b890-88523b783295"),
                            CorrectAnswer = "E",
                            ExamId = "EX202003",
                            QuestionNumber = 3
                        },
                        new
                        {
                            Id = new Guid("8430c0ad-ce25-4386-bebe-974697290046"),
                            CorrectAnswer = "E",
                            ExamId = "EX202003",
                            QuestionNumber = 4
                        },
                        new
                        {
                            Id = new Guid("ba3a5155-7b14-4e5f-8f95-bd93333944ad"),
                            CorrectAnswer = "A",
                            ExamId = "EX202003",
                            QuestionNumber = 5
                        },
                        new
                        {
                            Id = new Guid("83e504d1-6dd3-4ef8-a3ae-6cb18d754543"),
                            CorrectAnswer = "C",
                            ExamId = "EX202003",
                            QuestionNumber = 6
                        },
                        new
                        {
                            Id = new Guid("a63cb032-2cdf-47b0-bd5b-0ffd898dac76"),
                            CorrectAnswer = "D",
                            ExamId = "EX202003",
                            QuestionNumber = 7
                        },
                        new
                        {
                            Id = new Guid("7f1cafae-aea7-4684-b0cb-e5aa5b4269f5"),
                            CorrectAnswer = "E",
                            ExamId = "EX202003",
                            QuestionNumber = 8
                        },
                        new
                        {
                            Id = new Guid("8570291c-a6cf-409d-999f-6dfbe9b85783"),
                            CorrectAnswer = "A",
                            ExamId = "EX202003",
                            QuestionNumber = 9
                        },
                        new
                        {
                            Id = new Guid("782e4f40-ca23-4bf4-87c7-db3e5f37bd17"),
                            CorrectAnswer = "A",
                            ExamId = "EX202003",
                            QuestionNumber = 10
                        },
                        new
                        {
                            Id = new Guid("511bcb36-966d-4175-923c-718d787d5471"),
                            CorrectAnswer = "E",
                            ExamId = "EX202003",
                            QuestionNumber = 11
                        },
                        new
                        {
                            Id = new Guid("159b595e-7de0-4ba9-b1bf-16f9e35b4fe1"),
                            CorrectAnswer = "C",
                            ExamId = "EX202003",
                            QuestionNumber = 12
                        },
                        new
                        {
                            Id = new Guid("016bfd2c-0513-4d10-b697-f619ca54cd9b"),
                            CorrectAnswer = "B",
                            ExamId = "EX202003",
                            QuestionNumber = 13
                        },
                        new
                        {
                            Id = new Guid("4c25359c-2fd1-432a-97be-156dd26d994d"),
                            CorrectAnswer = "A",
                            ExamId = "EX202003",
                            QuestionNumber = 14
                        },
                        new
                        {
                            Id = new Guid("c30c961b-0a9d-4b5f-a8b7-dcadc87f56a6"),
                            CorrectAnswer = "B",
                            ExamId = "EX202003",
                            QuestionNumber = 15
                        },
                        new
                        {
                            Id = new Guid("1e32da37-643f-4f5f-a6f3-04f03825a758"),
                            CorrectAnswer = "C",
                            ExamId = "EX202003",
                            QuestionNumber = 16
                        },
                        new
                        {
                            Id = new Guid("2b76cc5b-763d-47a1-938f-c3d7e721ee92"),
                            CorrectAnswer = "A",
                            ExamId = "EX202003",
                            QuestionNumber = 17
                        },
                        new
                        {
                            Id = new Guid("dbad56ee-1061-4640-99ba-08330b25bde0"),
                            CorrectAnswer = "B",
                            ExamId = "EX202003",
                            QuestionNumber = 18
                        },
                        new
                        {
                            Id = new Guid("cfbd28c1-6007-4cb8-9f78-f708994313da"),
                            CorrectAnswer = "B",
                            ExamId = "EX202003",
                            QuestionNumber = 19
                        },
                        new
                        {
                            Id = new Guid("395f7481-11f0-431c-b428-39bba1f6f5e3"),
                            CorrectAnswer = "D",
                            ExamId = "EX202003",
                            QuestionNumber = 20
                        },
                        new
                        {
                            Id = new Guid("fc04b896-1cea-45aa-ad90-32f636bdcf94"),
                            CorrectAnswer = "E",
                            ExamId = "EX202004",
                            QuestionNumber = 1
                        },
                        new
                        {
                            Id = new Guid("fa1f13a1-ffd9-451c-82e1-bc5c0875d991"),
                            CorrectAnswer = "A",
                            ExamId = "EX202004",
                            QuestionNumber = 2
                        },
                        new
                        {
                            Id = new Guid("578d7ef5-5a1c-42cc-8d36-cf42f219039d"),
                            CorrectAnswer = "C",
                            ExamId = "EX202004",
                            QuestionNumber = 3
                        },
                        new
                        {
                            Id = new Guid("de3e1906-ceb4-49fb-9fb9-1962ee5f1958"),
                            CorrectAnswer = "D",
                            ExamId = "EX202004",
                            QuestionNumber = 4
                        },
                        new
                        {
                            Id = new Guid("c20eef03-a0ee-4ebd-8fd2-d6289ea1ceb5"),
                            CorrectAnswer = "E",
                            ExamId = "EX202004",
                            QuestionNumber = 5
                        },
                        new
                        {
                            Id = new Guid("75be053f-53d7-4eb6-bec6-4406894af86a"),
                            CorrectAnswer = "A",
                            ExamId = "EX202004",
                            QuestionNumber = 6
                        },
                        new
                        {
                            Id = new Guid("76f13358-916f-44b1-be81-6e10ece7e43f"),
                            CorrectAnswer = "A",
                            ExamId = "EX202004",
                            QuestionNumber = 7
                        },
                        new
                        {
                            Id = new Guid("db5711e0-c91a-4316-afc9-880fdc421f5b"),
                            CorrectAnswer = "E",
                            ExamId = "EX202004",
                            QuestionNumber = 8
                        },
                        new
                        {
                            Id = new Guid("5d74cc9e-a831-4711-ad69-8fa528bf1b26"),
                            CorrectAnswer = "C",
                            ExamId = "EX202004",
                            QuestionNumber = 9
                        },
                        new
                        {
                            Id = new Guid("9da709dd-9728-462f-9d11-87c6ed0bcc9a"),
                            CorrectAnswer = "B",
                            ExamId = "EX202004",
                            QuestionNumber = 10
                        },
                        new
                        {
                            Id = new Guid("e5189a9b-0635-44b3-b64e-1f33ecb25a81"),
                            CorrectAnswer = "A",
                            ExamId = "EX202004",
                            QuestionNumber = 11
                        },
                        new
                        {
                            Id = new Guid("cd3d1fd5-1fbd-4268-bbc1-c1daa860da8b"),
                            CorrectAnswer = "B",
                            ExamId = "EX202004",
                            QuestionNumber = 12
                        });
                });

            modelBuilder.Entity("TestReach.Exam.Domain.Entities.Answer", b =>
                {
                    b.HasOne("TestReach.Exam.Domain.Entities.ExamAttempt", "ExamAttempt")
                        .WithMany("Answers")
                        .HasForeignKey("ExamAttemptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamAttempt");
                });

            modelBuilder.Entity("TestReach.Exam.Domain.Entities.ExamAttempt", b =>
                {
                    b.HasOne("TestReach.Exam.Domain.Entities.Candidate", "Candidate")
                        .WithMany("ExamAttempts")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestReach.Exam.Domain.Entities.Exam", "Exam")
                        .WithMany("ExamAttempts")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("TestReach.Exam.Domain.Entities.Question", b =>
                {
                    b.HasOne("TestReach.Exam.Domain.Entities.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("TestReach.Exam.Domain.Entities.Candidate", b =>
                {
                    b.Navigation("ExamAttempts");
                });

            modelBuilder.Entity("TestReach.Exam.Domain.Entities.Exam", b =>
                {
                    b.Navigation("ExamAttempts");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("TestReach.Exam.Domain.Entities.ExamAttempt", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
